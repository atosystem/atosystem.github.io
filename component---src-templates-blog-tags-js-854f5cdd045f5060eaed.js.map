{"version":3,"sources":["webpack://gatsby-starter-default/./node_modules/@material-ui/core/esm/Paper/Paper.js","webpack://gatsby-starter-default/./node_modules/@material-ui/core/esm/Card/Card.js","webpack://gatsby-starter-default/./node_modules/@material-ui/core/esm/Typography/Typography.js","webpack://gatsby-starter-default/./src/components/blogs_list/index.js","webpack://gatsby-starter-default/./src/components/blogs_list/styles/index.module.css","webpack://gatsby-starter-default/./src/templates/blog-tags.js"],"names":["Paper","props","ref","classes","className","_props$component","component","Component","_props$square","square","_props$elevation","elevation","_props$variant","variant","other","root","outlined","concat","rounded","withStyles","theme","elevations","shadows","forEach","shadow","index","boxShadow","backgroundColor","palette","background","paper","color","text","primary","transition","transitions","create","borderRadius","shape","border","divider","name","Card","_props$raised","raised","overflow","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","Typography","_props$align","align","_props$color","_props$display","display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variantMapping","variantMapping","capitalize","margin","typography","caption","button","overline","srOnly","position","height","width","alignLeft","textAlign","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","marginBottom","colorInherit","colorPrimary","main","colorSecondary","secondary","colorTextPrimary","colorTextSecondary","colorError","error","displayInline","displayBlock","nodes","map","p","key","id","to","frontmatter","slug","style","textDecorationLine","thumb","fluid","childImageSharp","padding","justifyContent","alignContent","title","date","excerpt","tags","t","ind","Chip","size","label","pageContext","data","tag","allMarkdownRemark","edges","totalCount","tagHeader","node"],"mappings":"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","file":"component---src-templates-blog-tags-js-854f5cdd045f5060eaed.js","sourcesContent":["import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  var elevations = {};\n  theme.shadows.forEach(function (shadow, index) {\n    elevations[\"elevation\".concat(index)] = {\n      boxShadow: shadow\n    };\n  });\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {\n      backgroundColor: theme.palette.background.paper,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create('box-shadow')\n    },\n\n    /* Styles applied to the root element if `square={false}`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      border: \"1px solid \".concat(theme.palette.divider)\n    }\n  }, elevations);\n};\nvar Paper = /*#__PURE__*/React.forwardRef(function Paper(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$square = props.square,\n      square = _props$square === void 0 ? false : _props$square,\n      _props$elevation = props.elevation,\n      elevation = _props$elevation === void 0 ? 1 : _props$elevation,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'elevation' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"square\", \"elevation\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant === 'outlined' ? classes.outlined : classes[\"elevation\".concat(elevation)], !square && classes.rounded),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiPaper'\n})(Paper);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = /*#__PURE__*/React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\nimport BackgroundImage from \"gatsby-background-image\"\n\nimport Card from \"@material-ui/core/Card\"\nimport { Chip, Typography } from \"@material-ui/core\"\n\nimport * as styles from \"./styles/index.module.css\"\n\n// import * as styles from \"../styles/navbar.module.css\"\n\nconst BlogsList = ({ nodes }) => {\n  return (\n    <>\n      <div className={styles.blog_item_card_container}>\n        {nodes.map(p => {\n          return (\n            <div key={p.id} className={styles.blog_item_card}>\n              <Link\n                to={`/blogs/${p.frontmatter.slug}`}\n                style={{ textDecorationLine: \"none\" }}\n              >\n                <Card style={{ backgroundColor: \"rgba(255,255,255,.8)\" }}>\n                  {p.frontmatter.thumb ? (\n                    <BackgroundImage\n                      style={{\n                        height: \"100%\",\n                        width: \"100%\",\n                      }}\n                      fluid={p.frontmatter.thumb.childImageSharp.fluid}\n                    >\n                      <div style={{ padding: 8 }}>\n                        <div\n                          style={{\n                            backgroundColor: \"rgba(255,255,255,1)\",\n                            boxShadow: \"0 0 10px 10px #FFF\",\n                          }}\n                        >\n                          <div\n                            style={{\n                              display: \"flex\",\n                              justifyContent: \"space-between\",\n                              alignContent: \"center\",\n                            }}\n                          >\n                            <Typography variant=\"h5\">\n                              {p.frontmatter.title}\n                            </Typography>\n                            <div>{p.frontmatter.date}</div>\n                          </div>\n                          {/* <Img fluid={p.frontmatter.thumb.childImageSharp.fluid} /> */}\n                          <p>{p.excerpt}</p>\n                        </div>\n                        <div\n                          style={{\n                            display: \"flex\",\n                            justifyContent: \"space-between\",\n                            alignContent: \"center\",\n                          }}\n                        >\n                          <div>\n                            {p.frontmatter.tags.map((t, ind) => {\n                              return (\n                                <span key={ind} style={{ margin: 2 }}>\n                                  <Link\n                                    to={`/tags/${t}`}\n                                    style={{ textDecorationLine: \"none\" }}\n                                  >\n                                    <Chip\n                                      style={{\n                                        backgroundColor: \"rgba(23,34,60,.9)\",\n                                      }}\n                                      size=\"small\"\n                                      color=\"primary\"\n                                      label={t}\n                                    />\n                                  </Link>\n                                </span>\n                              )\n                            })}\n                          </div>\n                        </div>\n                      </div>\n                    </BackgroundImage>\n                  ) : null}\n                </Card>\n              </Link>\n            </div>\n          )\n        })}\n      </div>\n    </>\n  )\n}\n\nexport default BlogsList\n\n//  export const query = graphql``\n","// extracted by mini-css-extract-plugin\nexport var blog_item_card = \"index-module--blog_item_card--3uDke\";\nexport var blog_item_card_container = \"index-module--blog_item_card_container--1oKxe\";","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\n// Components\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport BlogsList from \"../components/blogs_list\"\n\nconst BlogTags = ({ pageContext, data }) => {\n  const { tag } = pageContext\n  const { edges, totalCount } = data.allMarkdownRemark\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? \"\" : \"s\"\n  } tagged with \"${tag}\"`\n\n  return (\n    <Layout>\n      <div>\n        <h1>{tagHeader}</h1>\n        <BlogsList nodes={edges.map(({ node }) => node)} />\n        {/* <ul>\n        {edges.map(({ node }) => {\n        //   const { slug } = node.fields\n          const { title,slug } = node.frontmatter\n          return (\n            <li key={slug}>\n              <Link to={slug}>{title}</Link>\n            </li>\n          )\n        })}\n      </ul> */}\n        {/*\n              This links to a page that does not yet exist.\n              You'll come back to it!\n            */}\n        <Link to=\"/tags\">All tags</Link>\n      </div>\n    </Layout>\n  )\n}\n\nBlogTags.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n              slug: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n}\n\nexport default BlogTags\n\nexport const pageQuery = graphql`\n  query ($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          frontmatter {\n            slug\n            stack\n            title\n            tags\n            date(formatString: \"YYYY-MM-DD\")\n            thumb {\n              childImageSharp {\n                fluid {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n          id\n          excerpt(pruneLength: 100)\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}